################################################################################
# What Was That?
################################################################################
tabby_cat = "\tI'm tabbed in."
persian_cat = "I'm split\non a line."
backslash_cat = "I'm \\ a \\ cat."
fat_cat = """
I'll do a list:
\t* cat food
\t* fishes
\t* catnip\n \t* grass
"""
print(tabby_cat)
print(persian_cat)
print(backslash_cat)
print(fat_cat)


################################################################################
# Escape Sequences    #  What it Does
################################################################################
# \\                  # backlash (\)
##Example#######################################################################
print("\\") #result \
################################################################################
# \'                  # single-quote (')
##Example#######################################################################
print('\'') #result '
################################################################################
# \"                  # double-quote (")
##Example#######################################################################
print("\"") #result "
################################################################################
# \a                  # ASCII bell (BEL)
##Example#######################################################################
print("testing \a ")
################################################################################
# \b                  # ASCII backspace(BS)
##Example#######################################################################
print("Hello \b world!") #result Hello World
################################################################################
# \f                  # ASCII formfeed (FF)
##Example#######################################################################
print("hello \f world!") #result: #hello
                                  #world!
################################################################################
# \n                  # ASCII linefeed (LF)
##Example#######################################################################
print("hello \n world!") #result: #hello
                                  #world!
################################################################################
# \N{name}            # character named name in the unicode DB (unicode only)
################################################################################
# \r                  # carriage return (CR)
##Example#######################################################################
print("hello \r world!") #result: #hello
                                  #world!
################################################################################
# \t                  # horizontal tab (TAB)
##Example#######################################################################
print("hello \t world!") #result hello     world!
################################################################################
# \uxxxx              # character with 16-bit hex value xxxx
################################################################################
# \Uxxxxxxxx          # character with 32-bit hex value xxxxxxxx
################################################################################
# \v                  # ASCII vertical tab
##Example#######################################################################
print("hello \v world!") #result: #hello
                                  #world!
################################################################################
# \000                # character with octal vaule 000
##Example#######################################################################
print()
################################################################################
# \xhh                # character with hex value hh
##Example#######################################################################
print()
################################################################################
